[tool.poetry]
name = "juntos-somos-mais-api"
version = "0.1.0"
description = ""
authors = ["alfmorais <alfredneto@hotmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.5"
cachetools = "^5.3.3"
email-validator = "^2.1.1"
fastapi = "^0.110.2"
fastapi-pagination = "^0.12.24"
httpx = "^0.27.0"
ipdb = "^0.13.13"
pre-commit = "^3.7.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
pytest-vcr = "^1.0.2"
shapely = "^2.0.4"
taskipy = "^1.12.2"
unidecode = "^1.3.8"
uvicorn = "^0.29.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ". src"
python_files = ["tests_*.py", "*_test.py", "testing/python/*.py", "test_*.py"]

[tool.taskipy.tasks]
shell = { cmd = "export PYTHONDONTWRITEBYTECODE=1 && ipython", help = "shell" }
remove-pycache = { cmd = "find . -type d -name '__pycache__' -exec rm -r {} + && find . -type f -name '*.pyc' -exec rm {} +", help="remove pycache files" }
remove-pytest-cache = { cmd = "rm -rf .pytest_cache", help = "remove .pytest_cache dir" }
generate-requirements  = { cmd = "export PYTHONDONTWRITEBYTECODE=1 && poetry export --format=requirements.txt > requirements.txt", help = "generate requirements.txt from poetry" }
install = { cmd = "export PYTHONDONTWRITEBYTECODE=1 &&  pip install -r requirements.txt", help = "install packages with pip" }
test-local = { cmd = "export PYTHONDONTWRITEBYTECODE=1 && pytest -vvv --disable-warnings --cov src", help = "runs all unit tests" }
run = { cmd = "uvicorn src.api.app:app --reload", help = "run project without docker" }
run-without-cache = { cmd = "docker-compose build --no-cache && docker-compose up", help = "build and run project without cache" }
run-with-cache = { cmd = "docker-compose up --build", help = "build and run project with docker" }
test = { cmd = "docker-compose run api1 pytest -vvv --disable-warnings --cov src", help = "running test on docker" }
build-no-cache = { cmd = "docker-compose build --no-cache", help = "build and run project without cache" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
